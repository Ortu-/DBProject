//BLITZ TERRAIN 2.00 EXAMPLE - ENVIRONMENT MAPPING
//CREATED BY KARL HOBLEY (KAEDROHO) http://www.blitzwerks.co.uk
//PLEASE FREE TO USE THE CODE BELOW IN COMMERCIAL AND NON COMMERCIAL PROJECTS!
//CREATED AND TESTED WITH DBPRO 7.4

//This demo shows how to add Environment mapping.
//Environment mapping is creating a map showing where each environment is (rock, grass, sand, etc).
//This is mainly used for multidetailmapping. Setting which parts should have a grass texture and which parts should have a rock texture.
//This could also be used for footstep sounds and making sure that Rock doesnt get as much explosive damage as grass.
//The system is very fast. Getting a point environment is done by returning a value in an array, thats it.

//CONTROLS
//ARROWKEYS AND MOUSE - MOVE
// F1 - WIREFRAME ON. F2 - WIREFRAME OFF

//Setup
   sync on : sync rate 0 : sync
   set display mode 1024,768,32
   center text screen width()/2,screen height()/2,"Loading..." : sync : cls
   autocam off
   fog on
   fog color rgb(155,155,155)
   fog distance 3500

//Load media
   global g_HeightmapImgID : global g_TextureImgID : global g_DetailmapImgID : global g_EnvironmentmapImgID
   g_HeightmapImgID=1 : g_TextureImgID=2 : g_DetailmapImgID=3 : g_EnvironmentmapImgID=4
   load image "..\Media\rok1_hm.bmp",g_HeightmapImgID
   load image "..\Media\rok1_d.jpg",g_TextureImgID
   load image "..\Media\detail.tga",g_DetailmapImgID
   load image "..\Media\environment.bmp",g_EnvironmentmapImgID
   global g_GrassDetailImgID : global g_SandDetailImgID
   g_GrassDetailImgID=5 : g_SandDetailImgID=6
   load image "..\Media\grass.jpg",g_GrassDetailImgID
   load image "..\Media\sand.jpg",g_SandDetailImgID

   make object box 5000,1.5,6.0,0.5


//Create terrain
   //Make the terrain
   global g_TerrainID
   g_TerrainID=BT MakeTerrain()

   //Set images
   BT SetTerrainHeightmap g_TerrainID,g_HeightmapImgID
   BT SetTerrainTexture g_TerrainID,g_TextureImgID
   BT SetTerrainDetail g_TerrainID,g_DetailmapImgID
   BT SetTerrainEnvironment g_TerrainID,g_EnvironmentmapImgID

   //Set some other values
   BT SetTerrainScale g_TerrainID,12.8
   BT SetTerrainYScale g_TerrainID,3.0
   BT SetTerrainSplit g_TerrainID,8
   BT SetTerrainDetailTile g_TerrainID,24.0
   bt setterraindetailblendmode g_terrainid,1

   //LOD
   BT SetTerrainLOD g_TerrainID,3 //3 LOD levels
   BT SetTerrainLODDistance g_TerrainID,1,1000.0 //LOD Distances start at one and go up to 1 less the LOD level count
   BT SetTerrainLODDistance g_TerrainID,2,2000.0

   //Smoothing and Quad Rotation
   BT SetTerrainSmoothing g_TerrainID,1
   BT SetTerrainQuadRotation g_TerrainID,1

   //Environment maps
   EM_Grass=BT AddTerrainEnvironment(g_TerrainID,rgb(0,128,0)) //Seccond parameter tells the system which colour represents this environment on the environment map
   EM_Rock=BT AddTerrainEnvironment(g_TerrainID,rgb(192,192,192))
   EM_Sand=BT AddTerrainEnvironment(g_TerrainID,rgb(128,64,0))

   //Build
   global g_TerrainObjectID
   g_TerrainObjectID=1

   //This command processes the heightmap and creates all the internal structures for the terrain
   BT BuildTerrain g_TerrainID,g_TerrainObjectID

   //This command sets the number of sectors get created every call to 'BT ContinueBuild'.
   //As we dont need a loading bar, I set this to 0 which makes it create the whole terrain at once
   BT SetBuildStep 0

   repeat

      //This command generates the sectors. It returns the percentage of how much of the terrain it has generated.
      //When it has generated the whole terrain it will return -1
      progress=BT ContinueBuild()
   until progress=-1

//Setup camera
   set camera range 10,5000
   hide mouse

//Main loop
   StartTime=timer()
   do
   //Camera movement
      `Elapsedtime#=(timer()-StartTime)/3000.0+Elapsedtime#*0.7
      Elapsedtime#=timer()-starttime
      StartTime=timer()
      cx#=camera angle x()+mousemovey()/4.0
      if cx#>90.0 then cx#=90.0
      if cx#<-90.0 then cx#=-90.0
      rotate camera cx#,camera angle y()+mousemovex()/4.0,0.0
      if upkey() then move camera 0.0066*Elapsedtime#
      if downkey() then move camera -0.0066*Elapsedtime#
      gheight#=BT GetGroundHeight(g_TerrainID,camera position x(),camera position z())
      `if camera position y()-40<gheight# then position camera camera position x(),gheight#+40,camera position z()
      position camera camera position x(),gheight#+10.0,camera position z()

      camx#=camera position x()+sin(camera angle y())*14.0
      camz#=camera position z()+cos(camera angle y())*14.0
      ghchar#=bt getgroundheight(g_terrainid,camx#,camz#)
      position object 5000,camx#,ghchar#+3.0,camz#
      yrotate object 5000,camera angle y()
      camx#=camera position x()+sin(camera angle y())*60.0
      camz#=camera position z()+cos(camera angle y())*60.0
      point camera camx#,object position y(5000),camz#

   //Environment Maps
      Env=BT GetPointEnvironment(g_TerrainID,camera position x(),camera position z())
      if Env=EM_Grass
         center text screen width()/2,screen height()/2,"ON GRASS"
         BT SetTerrainDetail g_TerrainID,g_GrassDetailImgID
      endif
      if Env=EM_Rock
         center text screen width()/2,screen height()/2,"ON ROCK"
         BT SetTerrainDetail g_TerrainID,g_DetailmapImgID
      endif
      if Env=EM_Sand
         center text screen width()/2,screen height()/2,"ON SAND"
         BT SetTerrainDetail g_TerrainID,g_SandDetailImgID
      endif

   //Wireframe
      if keystate(59) then set object wireframe g_TerrainObjectID,1
      if keystate(60) then set object wireframe g_TerrainObjectID,0

   //Render the terrain
      BT SetCurrentCamera 0 //Set current camera to 0 (if the camera has moved/rotated since this command was last called, you must call it again!)
      BT UpdateTerrainCull g_TerrainID //Update frustum culling
      BT UpdateTerrainLOD g_TerrainID //Update LOD
      BT RenderTerrain g_TerrainID //Render the terrain

   //FPS
      text 10,10,str$(screen fps())
      text 10,20,str$(camera position x())+","+str$(camera position z())
      text 10,30,str$(object position x(5000))+","+str$(object position z(5000))
      text 10,40,str$(fogd#)

   //Position mouse
      position mouse screen width()/2,screen height()/2



   //Update screen
      sync

   loop
   
