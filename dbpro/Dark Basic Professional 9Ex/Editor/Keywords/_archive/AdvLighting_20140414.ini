AdvLighting_Setup=AdvLighting/setup.html=(int Screen Width, int Screen Height)
AdvLighting_Update=AdvLighting/update.html=(null)
AdvLighting_SetCamera=AdvLighting/setCamera.html=(float Near, float Far, float FOV, float Aspect)
AdvLighting_SetAmbient=AdvLighting/setAmbient.html=(float R, float G, float B)
AdvLighting_SetAmbientTexture=AdvLighting/setAmbientTexture.html=(int ImageNumber)
AdvLighting_SetFog=AdvLighting/setFog.html=(float Range, float Power, float R1, float G1, float B1, float R2, float G2, float B2)
AdvLighting_SetHeightFog=AdvLighting/setHeightFog.html=(float Height, float Illumination, float Exponential, float Range, float Falloff, float R, float G, float B, float Alpha)
AdvLighting_Debug=AdvLighting/debug.html=(null)
FogArea_Create=AdvLighting/fogArea_create.html=(int Type) :: Returns FogAreaID
FogArea_Delete=AdvLighting/fogArea_delete.html=(int FogAreaID)
FogArea_Update=AdvLighting/fogArea_update.html=(null)
FogArea_Visible=AdvLighting/fogArea_visible.html=(int FogAreaID, bool isVisible)
FogArea_SetOrientation=AdvLighting/fogArea_setOrientation.html=(int FogAreaID, float PosX, float PosY, float PosZ, float AngX, float AngY, float AngZ, float ScaleX, float ScaleY, float ScaleZ)
FogArea_SetColor=AdvLighting/fogArea_setColor.html=(int FogAreaID, float R, float G, float B, float Alpha)
FogArea_SetRange=AdvLighitng/fogArea_setRange.html=(int FogAreaID, float Range, float zRange, float zFall)
FogArea_SetCaustics=AdvLighting/fogArea_setCaustics.html=(int FogAreaID, int ImageNum, float DirX, float DirY, float DirZ, float Scale)
PostProcessing_Setup=AdvLighting/postProcess_setup.html=(int ScreenW, int ScreenH, int D3D Format, bool Refract, bool Distort, bool SSAO, bool Scatter, bool AA, bool Bloom, bool DOF, bool Blur)
Sky_Create=AdvLighting/sky_create.html=(null)
Sky_Delete=AdvLighting/sky_delete.html=(null)
Sky_SetVisible=AdvLighting/sky_setVisible.html=(bool isVisible)
Sky_SetDynamic=AdvLighting/sky_setDynamic.html=(bool isDynamic)
Sky_SetTexture=AdvLighting/sky_setTexture.html=(int ImageNumber)
Sky_SetAngle=AdvLighting/sky_setAngle.html=(float X, float, Y, float Z)
Sky_SetColor1=AdvLighting/sky_setColor1.html=(float R, float G, float B)
Sky_SetColor2=AdvLighting/sky_setColor2.html=(float R, float G, float B)
Sky_SetSunTexture=AdvLighting/sky_setSunTexture.html=(int ImageNumber)
Sky_SetSunColor=AdvLighting/sky_setSunColor.html=(float R, float G, float B)
Sky_SetSunAngle=AdvLighting/sky_setSunAngle.html=(float X, float Y, float Z, float size)
Sky_SetPlanetTexture=AdvLighting/sky_setPlanetTexture.html=(int ImageNumber)
Sky_SetPlanetColor=AdvLighting/sky_setPlanetColor.html=(float R, float G, float B)
Sky_SetPlanetAngle=AdvLighting/sky_setPlanetAngle.html=(float X, float Y, float Z, float size)
Sky_Update=AdvLighting/sky_update.html=(null)
TimeOfDay_Setup=AdvLighting/timeOfDay_setup.html=(null)
TimeOfDay_Update=AdvLighting/timeOfDay_update.html=(null)
TimeOfDay_SetSkyColor=AdvLighting/timeOfDay_setSkyColor.html=(int TimeIndex, int R1, int G1, int B1, int R2, int G2, int B2, int R3, int G3, int B3)
TimeOfDay_SetFogColor=AdvLighting/timeOfDay_setFogColor.html=(int TimeIndex, int R1, int G1, int B1, int R2, int G2, int B2, int R3, int G3, int B3)
TimeOfDay_SetLightColor=AdvLighting/timeOfDay_setLightColor.html=(int TimeIndex, int R1, int G1, int B1, int R2, int G2, int B2, int R3, int G3, int B3)
DirLight_Create=AdvLighting/dirLight_create.html=(bool Specular, bool SSAO, int Shadow, int Size)
DirLight_Delete=AdvLighting/dirLight_delete.html=(null)
DirLight_SetVisible=AdvLighting/dirLight_setVisible.html=(bool isVisible)
DirLight_SetAngle=AdvLighting/dirLight_setAngle.html=(float X, float Y, float Z)
DirLight_SetColor=AdvLighting/dirLight_setColor.html=(float R, float G, float B)
DirLight_SetRange=AdvLighting/dirLight_setRange.html=(float Range)
DirLight_SetSpecularPower=AdvLighting/dirLight_setSpecularPower.html=(float Power)
DirLight_SetShadow=AdvLighting/dirLight_setShadow.html=(int ShadowQuality, int Size)
DirLight_GetVisible=AdvLighting/dirLight_getVisible.html=(null) :: Returns float Visible
DirLight_GetAngleX=AdvLighting/dirLight_getAngleX.html=(null) :: Returns float X
DirLight_GetAngleY=AdvLighting/dirLight_getAngleY.html=(null) :: Returns float Y
DirLight_GetAngleZ=AdvLighting/dirLight_getAngleZ.html=(null) :: Returns float Z
DirLight_GetColorRed=AdvLighting/dirLight_getColorRed.html=(null) :: Returns float R
DirLight_GetColorGreen=AdvLighting/dirLight_getColorGreen.html=(null) :: Returns float G
DirLight_GetColorBlue=AdvLighting/dirLight_getColorBlue.html=(null) :: Returns float B
DirLight_GetRange=AdvLighting/dirLight_getRange.html=(null) :: Returns float Range
DirLight_Render=AdvLighting/dirLight_render.html=(int Split, float Range)
PointLight_Create=AdvLighting/pointLight_create.html=(bool Specular, bool SSAO, bool Shadow, int Size) :: Returns int LightID
PointLight_CreateCubeLight=AdvLighting/pointLight_createCubeLight.html=(bool Specular, bool SSAO, int Shadow, int ShadowMapSize) :: Returns int LightID
PointLight_Delete=AdvLighting/pointLight_delete.html=(int LightID)
PointLight_SetVisible=AdvLighting/pointLight_setVisible.html=(int LightID, bool isVisible)
PointLight_SetCubeTexture=AdvLighting/pointLight_setCubeTexture.html=(int LightID, int ImageNum)
PointLight_SetPosition=AdvLighting/pointLight_setPosition.html=(int LightID, float PosX, float PosY, float PosZ)
PointLight_SetAngle=AdvLighting/pointLight_setAngle.html=(int LightID, float AngX, float AngY, float AngZ)
PointLight_SetColor=AdvLighting/pointLight_setColor.html=(int LightID, float R, float G, float B)
PointLight_SetRange=AdvLighting/pointLight_setRange.html=(int LightID, float Range)
PointLight_SetAttenuation=AdvLighting/pointLight_setAttenuation.html=(int LightID, float Attenuation)
PointLight_SetSpecular=AdvLighting/pointLight_setSpecular.html=(int LightID, float Power)
PointLight_SetShadow=AdvLighting/pointLight_setShadow.html=(int LightID, int Shadow, float Size, float Range)
PointLight_GetVisible=AdvLighting/pointLight_getVisible.html=(int LightID) :: Returns float Visible
PointLight_GetPositionX=AdvLighting/pointLight_getPositionX.html=(int LightID) :: Returns float X
PointLight_GetPositionY=AdvLighting/pointLight_getPositionY.html=(int LightID) :: Returns float Y
PointLight_GetPositionZ=AdvLighting/pointLight_getPositionZ.html=(int LightID) :: Returns float Z
PointLight_GetAngleX=AdvLighting/pointLight_getAngleX.html=(int LightID) :: Returns float X
PointLight_GetAngleY=AdvLighting/pointLight_getAngleY.html=(int LightID) :: Returns float Y
PointLight_GetAngleZ=AdvLighting/pointLight_getAngleZ.html=(int LightID) :: Returns float Z
PointLight_GetColorRed=AdvLighting/pointLight_getColorRed.html=(int LightID) :: Returns float R
PointLight_GetColorGreen=AdvLighting/pointLight_getColorGreen.html=(int LightID) :: Returns float G
PointLight_GetColorBlue=AdvLighting/pointLight_getColorBlue.html=(int LightID) :: Returns float B
PointLight_GetRange=AdvLighting/pointLight_getRange.html=(int LightID) :: Returns float Range
PointLight_Update=AdvLighting/pointLight_update.html=(null)
PointLight_Render=AdvLighting/pointLight_render.html=(null)
SpotLight_Create=AdvLighting/spotLight_create.html=(bool Specular, bool SSAO, int ShadowMode, int ShadowMapSize) :: Returns int LightID
SpotLight_Delete=AdvLighting/spotLight_delete.html=(int LightID)
SpotLight_SetVisible=AdvLighting/spotLight_setVisible.html=(int LightID, bool setVisible)
SpotLight_Texture=AdvLighting/spotLight_setTexture.html=(int LightID, int ImageNum)
SpotLight_SetPosition=AdvLighting/spotLight_setPosition.html=(int LightID, float PosX, float PosY, float PosZ)
SpotLight_SetAngle=AdvLighting/spotLight_setAngle.html=(int LightID, float AngX, float AngY, float AngZ, float FOV)
SpotLight_SetRoll=AdvLighting/spotLight_setRoll.html=(int LightID, float Roll)
SpotLight_SetColor=AdvLighting/spotLight_setColor.html=(int LightID, float R, float G, float B)
SpotLight_SetRange=AdvLighting/spotLight_setRange.html=(int LightID, float Range)
SpotLight_SetAttenuation=AdvLighting/spotLight_setAttenuation.html=(int LightID, float Attenuation)
SpotLight_SetSpecularPower=AdvLighting/spotLight_setSpecularPower.html=(int LightID, float Power)
SpotLight_SetShadow=AdvLighting/spotLight_setShadow.html=(int LightID, int ShadowMode, float ShadowMapSize, float ShadowRange)
SpotLight_GetVisible=AdvLighting/spotLight_getVisible.html=(int LightID) :: Returns float Visible
SpotLight_GetPositionX=AdvLighting/spotLight_getPositionX.html=(int LightID) :: Returns float X
SpotLight_GetPositionY=AdvLighting/spotLight_getPositionY.html=(int LightID) :: Returns float Y
SpotLight_GetPositionZ=AdvLighting/spotLight_getPositionZ.html=(int LightID) :: Returns float Z
SpotLight_GetAngleX=AdvLighting/spotLight_getAngleX.html=(int LightID) :: Returns float X
SpotLight_GetAngleY=AdvLighting/spotLight_getAngleY.html=(int LightID) :: Returns float Y
SpotLight_GetAngleZ=AdvLighting/spotLight_getAngleZ.html=(int LightID) :: Returns float Z
SpotLight_GetFOV=AdvLighting/spotLight_getFOV.html=(int LightID) :: Returns float FOV
SpotLight_GetRoll=AdvLighting/spotLight_getRoll.html=(int LightID) :: Returns float Roll
SpotLight_GetColorRed=AdvLighting/spotLight_getColorRed.html=(int LightID) :: Returns float R
SpotLight_GetColorGreen=AdvLighting/spotLight_getColorGreen.html=(int LightID) :: Returns float G
SpotLight_GetColorBlue=AdvLighting/spotLight_getColorBlue.html=(int LightID) :: Returns float B
SpotLight_GetRange=AdvLighting/spotLight_getRange.html=(int LightID) :: float Range
SpotLight_Update=AdvLighting/spotLight_update.html=(null)
SpotLight_Render=AdvLighting/spotLight_render.html=(null)
Effect_Add=AdvLighting/effect_add.html=(int EffectID)
Effect_Remove=AdvLighting/effect_remove.html=(int EffectID)
Effect_SetDetailMapping=AdvLighting/effect_setDetailMapping.html=(int EffectID, bool setEnabled)
Effect_AttachedObject=AdvLighting/effect_attachedObject.html=(int EffectID, int ObjectNum)
AlphaEffect_Add=AdvLighting/alphaEffect_add.html=(int EffectID)
AlphaEffect_Remove=AdvLighting/alphaEffect_remove.html=(int EffectID)
AlphaEffect_EnableLighting=AdvLighting/alphaEffect_enableLighting.html=(int EffectID, bool setEnabled)
AlphaEffect_SetLightingPositionToCamera=AdvLighting/alphaEffect_setLightToCamera.html=(int EffectID, bool setEnabled)
AlphaEffect_SetLightingPositionToObject=AdvLighting/alphaEffect_setLightToObject.html=(int EffectID, int ObjectNum)
AlphaEffect_SetLightingPosition=AdvLightint/alphaEffect_setLightingPosition.html=(int EffectID, float PosX, float PosY, float PosZ)
AlphaEffect_UpdateLighting=AdvLighting/alphaEffect_updateLighting.html=(null)
Object_Add=AdvLighting/object_add.html=(int ObjectNum)
Object_Remove=AdvLighting/object_remove.html=(int ObjectNum)
Object_SetAutoUpdate=AdvLighting/object_setAutoUpdate.html=(int ObjectNum, int Mode)
Object_SetShadow=AdvLighting/object_setShadow.html=(int ObjectNum, bool setEnabled, int DirShadowMode)
Object_SetReflection=AdvLighting/object_setReflection.html=(int ObjectNum, bool setEnabled)
Object_Mask=AdvLighting/object_mask.html=(int ObjectNum, bool AdvLighting, bool Shadow, int DirShadow, bool Reflection)
Object_UpdateShadow=AdvLighting/object_updateShadow.html=(int ObjectNum)
Object_UpdateObject=AdvLighting/object_updateObject.html=(int ObjectNum)
Object_AutoUpdateObject=AdvLighting/object_autoUpdateObject.html=(null)
Object_GetBounds=AdvLighting/object_getBounds.html=(int ObjectNum)
AlphaObject_Add=AdvLighting/alphaObject_add.html=(int ObjectNum)
AlphaObject_Remove=AdvLighting/alphaObject_remove.html=(int ObjectNum)
AlphaObject_Mask=AdvLighting/alphaObject_mask.html=(int ObjectNum, bool Alpha, bool Refract, bool DistortScatter)
AlphaObject_AdditiveBlending=AdvLighting/alphaObject_additiveBlending.html=(int ObjectNum, bool setEnabled)
Materials_Load=AdvLighting/materials_load.html=(string FilePath)
Materials_Delete=AdvLighting/materials_delete.html=(null)
Materials_Apply=AdvLighting/materials_apply.html=(int ObjectNum)
Materials_ApplyToLimb=AdvLighting/materials_applyToLimb.html=(int ObjectNum, int Limb)
Materials_DetailMapping=AdvLighting/materials_detailMapping.html=(bool setEnabled)
Materials_SaveStaticCubeMap=AdvLighting/materials_saveStaticCubeMap.html=(float PosX, float PosY, float PosZ, int MapSize, string Face1, string Face2, string Face3, string Face4, string Face5, string Face6)
Emitter_SetUp=AdvLighting/emitter_setup.html=(null)
Emitter_Load=AdvLighting/emitter_load.html=(string FilePath, float ParticleSize) :: Returns int EmitterID
Emitter_Clone=AdvLighting/emitter_clone.html=(int SourceEmitterID) :: Returns int NewEmitterID
Emitter_Update=AdvLighting/emitter_update.html=(float Timer)
Emitter_Delete=AdvLighting/emitter_delete.html=(int EmitterID)
Emitter_EmitParticle=AdvLighting/emitter_emitParticle.html=(int EmitterID, int SubEmitterID) Returns int ParticleID
Emitter_Play=AdvLighting/emitter_play.html=(int EmitterID, int SubEmitterID)
Emitter_Stop=AdvLighting/emitter_stop.html=(int EmitterID, int SubEmitterID)
Emitter_SetVisible=AdvLighting/emitter_setVisible.html=(int EmitterID, bool setVisible)
Emitter_SetAutoDelete=AdvLighting/emitter_setAutoDelete.html=(int EmitterID, bool setAuto)
Emitter_SetUpdateTimer=AdvLighting/emitter_setUpdateTimer.html=(int EmitterID, int SubEmitterID, float UpdateInterval)
Emitter_SetUpdateDistanceStep=AdvLighting/emitter_setUpdateDistanceStep.html=(int EmitterID, int SubEmitterID, int Distance)
Emitter_SetPosition=AdvLighting/emitter_setPosition.html=(int EmitterID, float PosX, float PosY, float PosZ, bool Mode)
Emitter_SetAngle=AdvLighting/emitter_setAngle.html=(int EmitterID, float AngX, float AngY, float AngZ)
Emitter_SetEmissionID=AdvLighting/emitter_setEmissionID.html=(int EmitterID, int SubEmitterID, int EmissionID)
Emitter_SetCollisionID=AdvLighting/emitter_setCollisionID.html=(int EmitterID, int SubEmitterID, int CollisionID)
Emitter_SetCollisionHeight=AdvLighting/emitter_setCollisionHeight.html=(int EmitterID, int SubEmitterID, bool setEnabled, float Height)
Emitter_SetCollisionPlane=AdvLighting/emitter_setCollisionPlane.html=(int EmitterID, int SubEmitterID, bool setEnabled, float PosX, float PosY, float PosZ, float NorX, float NorY, float NorZ)
Emitter_SetCollisionStep=AdvLighting/emitter_setCollisionStep.html=(int EmitterID, int SubEmitterID, int Step)
Emitter_SetOrientationStep=AdvLighting/emitter_setOrientationStep.html=(int EmitterID, int SubEmitterID, int Step)
Emitter_SetEdgeSoftness=AdvLighting/emitter_setEdgeSoftness.html=(int EmitterID, int SubEmitterID, float Softness)
Emitter_SetLighting=AdvLightning/emitter_setLighting.html=(int EmitterID, int SubEmitterID, int Lighting)
Emitter_SetDistortion=AdvLighting/emitter_SetDistortion.html=(int EmitterID, int SubEmitterID, int EmitterTexture, int ParticleTexture)
Emitter_Mask=AdvLighting/emitter_mask.html=(int EmitterID, int SubEmitterID, bool Alpha, bool Refract, bool Distort)
Emitter_GetVisible=AdvLighting/emitter_getVisible.html=(int EmitterID) :: Returns bool isVisible
Emitter_GetPositionX=AdvLighint/emitter_getPositionX.html=(int EmitterID, int SubEmitterID) :: Returns float X
Emitter_GetPositionY=AdvLighint/emitter_getPositionY.html=(int EmitterID, int SubEmitterID) :: Returns float Y
Emitter_GetPositionZ=AdvLighint/emitter_getPositionZ.html=(int EmitterID, int SubEmitterID) :: Returns float Z
Emitter_GetAngleX=AdvLighint/emitter_getAngleX.html=(int EmitterID, int SubEmitterID) :: Returns float X
Emitter_GetAngleY=AdvLighint/emitter_getAngleY.html=(int EmitterID, int SubEmitterID) :: Returns float Y
Emitter_GetAngleZ=AdvLighint/emitter_getAngleZ.html=(int EmitterID, int SubEmitterID) :: Returns float Z
Emitter_GetEmissionEvent=AdvLighting/emitter_getEmissionEvent.html=(null) :: Returns int EmissionEvent
Emitter_GetEmissionEmitter=AdvLighting/emitter_getEmissionEmitter.html=(null) :: Returns int EmitterID
Emitter_GetEmissionParticle=AdvLighting/emitter_getEmissionParticle.html=(null) :: Returns int ParticleID
Emitter_GetEmissionID=AdvLighting/emitter_getEmissionID.html=(null) :: Returns int EmissionID
Emitter_GetEmissionPositionX=AdvLighting/emitter_getEmissionPositionX.html=(null) :: Returns float X
Emitter_GetEmissionPositionY=AdvLighting/emitter_getEmissionPositionY.html=(null) :: Returns float Y
Emitter_GetEmissionPositionZ=AdvLighting/emitter_getEmissionPositionZ.html=(null) :: Returns float Z
Emitter_GetEmissionDirectionX=AdvLighting/emitter_getEmissionDirectionX.html=(null) :: Returns float X
Emitter_GetEmissionDirectionY=AdvLighting/emitter_getEmissionDirectionY.html=(null) :: Returns float Y
Emitter_GetEmissionDirectionZ=AdvLighting/emitter_getEmissionDirectionZ.html=(null) :: Returns float Z
Emitter_GetCollisionEvent=AdvLighting/emitter_getCollisionEvent.html=(null) :: Returns int CollisionEvent
Emitter_GetCollisionEmitter=AdvLighting/emitter_getCollisionEmitter.html=(null) :: Returns int EmitterID
Emitter_GetCollisionParticle=AdvLighting/emitter_getCollisionParticle.html=(null) :: Returns int ParticleID
Emitter_GetCollisionID=AdvLighting/emitter_getCollisionID.html=(null) :: Returns int CollisionID
Emitter_GetCollisionPositionX=AdvLighting/emitter_getCollisionPositionX.html=(null) :: Returns float X
Emitter_GetCollisionPositionY=AdvLighting/emitter_getCollisionPositionY.html=(null) :: Returns float Y
Emitter_GetCollisionPositionZ=AdvLighting/emitter_getCollisionPositionZ.html=(null) :: Returns float Z
Emitter_GetCollisionNormalX=AdvLighting/emitter_getCollisionNormalX.html=(null) :: Returns float X
Emitter_GetCollisionNormalY=AdvLighting/emitter_getCollisionNormalY.html=(null) :: Returns float Y
Emitter_GetCollisionNormalZ=AdvLighting/emitter_getCollisionNormalZ.html=(null) :: Returns float Z
Terrain_Create=AdvLighting/terrain_create.html=(int SizeX, int SizeZ, bool Clamp, int Height)
Terrain_Load=AdvLighting/terrain_load.html=(string HeightMap, string BlendMap1, string BlendMap2, string Color, bool Clamp)
Terrain_Delete=AdvLighting/terrain_delete.html=(null)
Terrain_SetVisible=AdvLighting/terrain_setVisible.html=(bool setVisible)
Terrain_SetScale=AdvLighting/terrain_setScale.html=(float TileSize, float Height)
Terrain_SetTexture=AdvLighting/terrain_setTexture.html=(int Atlas1, int Atlas2, int AtlasNormal)
Terrain_SetTextureSize=AdvLighting/terrain_setTextureSize.html=(float UV, float VerticleUV)
Terrain_AddAtlasTexture=AdvLighting/terrain_addAtlasTexture.html=(string FilePath, int TextureStage, int Normal)
Terrain_BuildAtlasTexture=AdvLighting/terrain_buildAtlasTexture.html=(string Atlas1, string Atlas2, string AtlasNormal)
Terrain_GetHeight=AdvLighting/terrain_getHeight.html=(float PosX, float PosZ) :: Returns float Height
Terrain_HeightWrap=AdvLighting/terrain_heightWrap.html=(float PosX, float PosZ) :: Returns float Height
Terrain_Ray=AdvLighting/terrain_ray.html=(float PosX, float PosY, float PosZ, float ToPosX, float ToPosY, float ToPosZ)
Terrain_Update=AdvLighting/terrain_update.html=(null)
Terrain_FrustumCull=AdvLighting/terrain_frustumCull.html=(null)
Terrain_LightCull=AdvLighting/terrain_lightCull.html=(float PosX, float PosY, float PosZ, float Range)
Terrain_LightDirCull=AdvLighting/terrain_lightDirCull.html=(float Range)
Terrain_LightSpotUpdate=AdvLighting/terrain_lightSpotUpdate.html=(int SpotShadowID)
Terrain_LightPointUpdate=AdvLighting/terrain_lightPointUpdate.html=(int PointShadowID)
Terrain_LightGroundHeigth=AdvLighting/terrain_lightGroundHeigth.html=(float PosX, float PosY, float PosZ float Range) :: Returns bool
Terrain_InitializeBrush=AdvLighting/terrain_initializeBrush.html=(null)
Terrain_BrushUpdate=AdvLighting/terrain_brushUpdate.html=(int MouseX, int MouseY)
Terrain_BrushSetEnabled=AdvLighting/terrain_brushSetEnabled.html=(bool setEnabled)
Terrain_BrushSetTool=AdvLighting/terrain_brushSetTool.html=(int Tool)
Terrain_BrushSetLayer=AdvLighting/terrain_brushSetLayer.html=(int Layer)
Terrain_BrushSetStrength=AdvLighting/terrain_brushSetStrength.html=(float Strength)
Terrain_BrushSetOuter=AdvLighting/terrain_brushSetOuter.html=(float Outer)
Terrain_BrushSetInner=AdvLighting/terrain_brushSetInner.html=(float Inner)
Terrain_BrushSetMinMaxSlope=AdvLighting/terrain_brushSetMinMaxSlope.html=(float Min, float Max, bool ErodeMask)
Terrain_BrushSetMinMaxHeight=AdvLighitng/terrain_brushSetMinMaxHeight.html=(flaot Min, float Max)
Terrain_BrushSetColor=AdvLighting/terrain_brushSetColor.html=(int R, int G, int B, int Specular, int BlendMask)
Terrain_BrushSetColorTexture=AdvLighting/terrain_brushSetColorTexture.html=(int ImageNum)
Terrain_BrushSculpt=AdvLighting/terrain_brushSculpt.hmtl=(float PosX, float PosZ, float OuterRadius, float InnerRadius, float IncValue)
Terrain_BrushSmooth=AdvLighting/terrain_brushSmooth.html=(float PosX, float PosZ, float OuterRadius, float InnerRadius, float IncValue)
Terrain_BrushFlatten=AdvLighting/terrain_brushFlatten.html=(float PosX, float PosZ, float OuterRadius, float InnerRadius, float IncValue, float Height)
Terrain_BrushPaintLayer=AdvLighting/terrain_brushPaintLayer.html=(float PosX, float PosZ, float OuterRadius, float InnerRadius, float IncValue)
Terrain_BrushFillLayer=AdvLighting/terrain_brushFillLayer.html=(null)
Terrain_BrushEmptyLayer=AdvLighting/terrain_brushEmptyLayer.html=(null)
Terrain_BrushPaintColor=AdvLighting/terrain_brushPaintColor.html=(float PosX, float PosZ, float OuterRadius, float InnerRadius, float IncValue)
Terrain_BrushFillColor=AdvLighting/terrain_brushFillColor.html=(null)
Terrain_BrushEmptyColor=AdvLighting/terrain_brushEmptyColor.html=(null)
Terrain_WrapX=AdvLighting/terrain_wrapX.html=(float X) :: Returns X
Terrain_WrapZ=AdvLighting/terrain_wrapZ.html=(float Z) :: Returns Z
Terrain_BrushToFrom=AdvLighting/terrain_brushToFrom.html=(int Mode, float PosX, float PosZ, float OuterRadius) :: Returns bool
Terrain_BrushEdit=AdvLighting/terrain_brushEdit.html=(int Mode, float PosX, float PosZ, float OuterRadius)
Terrain_GetSlope=AdvLighting/terrain_getSlope.html=(int X, int Z) :: Returns float Slope
Terrain_BrushUpdateHeight=AdvLighting/terrain_brushUpdateHeight.hmtl=(null)
Terrain_BrushUpdateBlendMap=AdvLighting/terrain_brushUpdateBlendMap.html=(null)
Terrain_BrushUpdateColorMap=AdvLighting/terrain_brushUpdateColorMap.html=(null)
Terrain_RefrashTexture=AdvLighting/terrain_refrashTexture.html=(null)
Terrain_LockHeightMap=AdvLighting/terrain_lockHeightMap.html=(null)
Terrain_UnlockHeightMap=AdvLighting/terrain_unlockHeightMap.html=(null)
Terrain_SetLockHeightMap=AdvLighting/terrain_setLockHeightMap.html=(int X, int Z, int Height)
Terrain_GetLockHeightMap=AdvLighting/terrain_getLockHeightMap.html=(int X, int Z) :: Returns int Height
Terrain_SetLockHeightMapSmooth=AdvLighting/terrain_setLockHeightMapSmooth.html=(int Smoothness)
Terrain_SetLockHeightMapNoise=AdvLighting/terrain_setLockHeightMapNoise.html=(int RndHeight, int Smoothness)
Terrain_SetLockHeightMapTerrace=AdvLighting/terrain_setLockHeightMapTerrace.html=(int Slices, int Smoothness)
Terrain_SetLockHeightMapErosion=AdvLighting/terrain_setLockHeightMapErosion.html=(int Randomize, int Strength, int Smoothness)
Terrain_HeightEditWrap=AdvLighting/terrain_heightEditWrap.html=(float X, float Z) :: Returns float
Terrain_ErosionEditWrap=AdvLighting/terrain_erosionEditWrap.html=(float X, float Z) :: Returns float
Water_Create=AdvLighting/water_create.html=(null)
Water_SetVisible=AdvLighting/water_setVisible.html=(bool setVisible)
Water_SetScale=AdvLighting/water_setScale.html=(float TileSize, float Height, float WaveHeight)
Water_SetFogColor=AdvLighting/water_setFogColor.html=(float Range, float Height, int R, int G, int B)
Water_Update=AdvLighting/water_update.html=(null)